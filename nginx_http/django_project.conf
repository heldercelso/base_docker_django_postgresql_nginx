upstream django_project {
    server web:8000;
}

server {
    #ipv4
    listen 80;
    #ipv6
    listen [::]:80;

    server_name localhost; # put yourdomain here


    # specify where Nginx should write its logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # deny requests for files that should never be accessed such as .pyc or .log files
    location ~ /\. {
        deny all;
    }
    location ~* ^.+\.(py|pyc|log)$ {
        deny all;
    }

    # redirect server error pages to the static page /50x.html
    #error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # send non-static file requests to the app server
    location / {
        try_files $uri @my_page;
    }

    location ~ ^/staticfiles/(.*)$ {
        alias /staticfiles/$1;
        autoindex on;
        gzip on;
        gzip_types  text/plain
                    application/x-javascript
                    text/xml
                    text/css
                    font/woff
                    application/font-woff
                    font/truetype
                    font/opentype
                    font/eot
                    application/vnd.ms-fontobject
                    image/svg+xml
                    image/x-icon;
    }

    # reverse proxy redirecting the request to the application, port 8000.
    location @my_page {
        #proxy_set_header Host $host;
        gzip on;
        gzip_types  text/plain
                    application/x-javascript
                    text/xml
                    text/css
                    font/woff
                    application/font-woff
                    font/truetype
                    font/opentype
                    font/eot
                    application/vnd.ms-fontobject
                    image/svg+xml
                    image/x-icon;
        proxy_pass http://django_project;
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nAllow: /\nSitemap: http://localhost/sitemap.xml\n"; # put yourdomain here
    }

    location = /sitemap.xml {
        alias /config/nginx/sitemap.xml;
    }

}